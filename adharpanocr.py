# -*- coding: utf-8 -*-
"""AdharPanOCR

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15v4oq-5Ot5q0peWD70fKttoqSvMbtJ9a
"""

pip install paddleocr

!pip install paddlepaddle

from paddleocr import PaddleOCR, draw_ocr
import cv2
from matplotlib import pyplot as plt

# Initialize PaddleOCR
ocr = PaddleOCR(use_angle_cls=True, lang='en')  # Set language as needed

result = ocr.ocr('/content/hdfc-bank-check1.png', cls=True)
for line in result[0]:
    print(line[1][0])

result = ocr.ocr('/content/pan-card-1000x1000.jpg', cls=True)
for line in result[0]:
    print(line[1][0])

!pip install transfomers

result = ocr.ocr('/content/sample_image1.jpg', cls=True)
for line in result[0]:
    print(line[1][0])

print(result)

def extractlines(result):
  lines=[]
  for line in result[0]:
    lines.append(line[1][0])
  return lines

import os
import re
aadhar_text=[]
image_dir = '/content/drive/MyDrive/aadhar'
for filename in os.listdir(image_dir):
    if filename.endswith(('.jpg', '.jpeg', '.png')):
        image_path = os.path.join(image_dir, filename)
        result = ocr.ocr(image_path, cls=True)
        lines=extractlines(result)
        aadhar_text.append(lines)

aadhar_text

import os
import re
pan_text=[]
image_dir = '/content/drive/MyDrive/pan'
for filename in os.listdir(image_dir):
    if filename.endswith(('.jpg', '.jpeg', '.png')):
        image_path = os.path.join(image_dir, filename)
        result = ocr.ocr(image_path, cls=True)
        lines=extractlines(result)
        pan_text.append(lines)

pan_text

import os
import re
cheque_text=[]
image_dir = '/content/drive/MyDrive/cheque'
for filename in os.listdir(image_dir):
    if filename.endswith(('.jpg', '.jpeg', '.png')):
        image_path = os.path.join(image_dir, filename)
        result = ocr.ocr(image_path, cls=True)
        lines=extractlines(result)
        cheque_text.append(lines)

cheque_text

from transformers import T5Tokenizer, T5ForConditionalGeneration, Trainer, TrainingArguments


# Load model and tokenizer
aadhar_model = T5ForConditionalGeneration.from_pretrained("/content/drive/MyDrive/aadhar/model") # Replace with the save path
tokenizer = T5Tokenizer.from_pretrained('t5-small')

result = ocr.ocr("/content/sample_image1.jpg", cls=True)
lines=extractlines(result)

pip install easyocr

import easyocr
reader = easyocr.Reader(['en'])

extracted_info =reader.readtext("/content/sample_image1.jpg", detail = 0)

print(extracted_info)

lines=list[lines]

aadhar_text[0]

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-large")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-large")

input_text = f"""Extract Name ,Dob,Sex,and aadhar  number(12 numbers) from the following data:{lines}"""
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))

input_text = f"""{extracted_info} """
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

# Generate predictions
outputs =aadhar_model.generate(input_ids,max_length=512)
predicted_text = tokenizer.decode(outputs[0], skip_special_tokens=True)

print(predicted_text)